// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestionnaireApp2.Models;

#nullable disable

namespace QuestionnaireApp2.Migrations
{
    [DbContext(typeof(QuestionnaireAppDbContext))]
    [Migration("20240619114808_new tables")]
    partial class newtables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuestionnaireApp2.Models.CustomQuestion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomQuestion");
                });

            modelBuilder.Entity("QuestionnaireApp2.Models.CustomQuestionResponses", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QuestionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomQuestionResponses");
                });

            modelBuilder.Entity("QuestionnaireApp2.Models.PersonalInformationFields", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonalInformationFields");
                });

            modelBuilder.Entity("QuestionnaireApp2.Models.PersonalInformationResponses", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FieldId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonalInformationResponses");
                });

            modelBuilder.Entity("QuestionnaireApp2.Models.Program", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Program");
                });

            modelBuilder.Entity("QuestionnaireApp2.Models.QuestionTypes", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("HasValues")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuestionTypes");

                    b.HasData(
                        new
                        {
                            Id = "9ea1a9da-3285-4550-a396-85a10fb79dff",
                            HasValues = false,
                            Name = "Paragraph"
                        },
                        new
                        {
                            Id = "1fdd811a-8295-4a17-bcb4-23ee0ee8a3b3",
                            HasValues = false,
                            Name = "Yes/No"
                        },
                        new
                        {
                            Id = "eba711bb-4243-4bb9-adf3-1e8cd04d7722",
                            HasValues = true,
                            Name = "Dropdown"
                        },
                        new
                        {
                            Id = "22ef9236-27d5-4b79-9543-c2c7e606fb4d",
                            HasValues = false,
                            Name = "Date"
                        },
                        new
                        {
                            Id = "35c29351-1b7e-41c5-9632-98523c10da9d",
                            HasValues = false,
                            Name = "Number"
                        });
                });

            modelBuilder.Entity("QuestionnaireApp2.Models.QuestionValues", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QuestionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuestionValues");
                });

            modelBuilder.Entity("QuestionnaireApp2.Models.Responses", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Responses");
                });
#pragma warning restore 612, 618
        }
    }
}
